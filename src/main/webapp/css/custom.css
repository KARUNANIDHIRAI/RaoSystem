@charset "ISO-8859-1";
 .dropdown:hover .dropdown-menu { 
      display: block; 
 } 
input:invalid{
	box-shadow:none;
/* 	box-shadow:0 0 .25px .5px red; */
}
input:focus:invalid{
box-shadow:none;
}
#ItemHd0{
	box-shadow:0 0 5px 1px yellow;
}
#inv02{
	box-shadow:0 0 5px 1px blue;
padding-top:2px; padding-bottom:2px;
}
#inv01{
	
background-color: linear-gradient( #051937, #004d7a, #008793, #00bf72, #a8eb12);
} 
#InvItemDetails_paginate{
	line-height:1rem; 
	font-size:10px;	
}
.dataTables_length{bg-primary: text-light;} 
table.dataTable.compact thead th, table.dataTable.compact thead td {
    padding: 10px 17px 4px 4px;
}
#POItemDetails_filter{
background-color: #17a2b8;
	text-color:white;	
}
#InvItem01{
padding-top:2px; padding-bottom:2px;	
} 
#POItemDetails_length{
	background-color: #17a2b8;
	text-color:white;
}
.bg-info {
    background-color: #17a2b8 ;
    color:white;
}
#POItemDetails_paginate {
    float: right;
    background-color: #17a2b8;
    padding-top:2px;
    padding-bottom:2px;
    color:white;
    line-height:.85rem;
    color:light;
}
#POItemDetails_info{
   background-color: #17a2b8;
    color:white;
    line-height:.85rem;
    color:light;
	
}
thead{
	  background-color: #17a2b8;
	  color:white;
	  color:ligth
}
#megha_menu{
	width:800px;
	overflow:hidden;
	padding-left:10px;
}
p{
	margin-bottom: .25rem;
}
.dropdown:hover .dropdown-menu { 
    display: block; 
}    
#dropdn:hover .dropdown-menu { 
    display: block; 
} 
#blineb{
	 border-bottom: 1px solid blue;
	 border-left: 1px solid blue;
}
.blinebl{
	 border-bottom: 1px solid blue;
	 border-left: 1px solid blue;
}
.blineTl{
	 border-top: 1px solid blue;
	 border-right: 1px solid blue;
}
.blineb{
	 border-bottom: 1px solid green;
	 border-left: 1px solid green;
}
.blineg{
	 border-bottom: 1px solid green;
	 border-left: 1px solid green;
}
.blined{
	 border-bottom: 1px solid black;
	 border-left: 1px solid black;
}
.blinew{
	 border-bottom: 1px solid #FFC30F;
	 border-left: 1px solid #FFC30F;
}

.blinebr{
	 border-bottom: 1px solid green;
	 border-right: 1px solid green;
}

#texareabotmcolorg{
	font-size:11px; color:blue	;
}




/*
n 10.0.19043.1165]
(c) Microsoft Corporation. All rights reserved.

E:\PROJECT\JAVA>git clone https://github.com/KARUNANIDHIRAI/BEGINNER.git // clone repository


E:\PROJECT\JAVA\BEGINNER>git checkout -b "DEMO1"  
Switched to a new branch 'DEMO1'

E:\PROJECT\JAVA\BEGINNER>git checkout -b "DEMO2"
Switched to a new branch 'DEMO2'

E:\PROJECT\JAVA\BEGINNER>git branch   // listout all branches existed in the remot repository
  DEMO1
* DEMO2
  main

E:\PROJECT\JAVA\BEGINNER>git checkout "DEMO1"
Switched to branch 'DEMO1'

E:\PROJECT\JAVA\BEGINNER>git status    // will check status on which branch currently pointed
On branch DEMO1
nothing to commit, working tree clean

E:\PROJECT\JAVA\BEGINNER>git add .  // add single file updated 

E:\PROJECT\JAVA\BEGINNER>git add --all  // add all file updated 


E:\PROJECT\JAVA\BEGINNER>git status  // show the list of file redy to commit
On branch DEMO1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   testc++.cpp


E:\PROJECT\JAVA\BEGINNER>git commit -m "test1"  // commit on local branch
[DEMO1 b2c5621] test1
 1 file changed, 8 insertions(+)
 create mode 100644 testc++.cpp

E:\PROJECT\JAVA\BEGINNER>git status
On branch DEMO1
nothing to commit, working tree clean

E:\PROJECT\JAVA\BEGINNER>git push origin -u "DEMO1"  //  push to remote repository in DEMO1 BRANCH
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 368 bytes | 368.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'DEMO1' on GitHub by visiting:
remote:      https://github.com/KARUNANIDHIRAI/BEGINNER/pull/new/DEMO1
remote:
To https://github.com/KARUNANIDHIRAI/BEGINNER.git
 * [new branch]      DEMO1 -> DEMO1
Branch 'DEMO1' set up to track remote branch 'DEMO1' from 'origin'.

E:\PROJECT\JAVA\BEGINNER>git config --global user.name "KARUNANIDHIRAI560100" // set user name
E:\PROJECT\JAVA\BEGINNER>git config --global user.email "KARUNANIDHIRAI@YAHOO.COM" // set user email
E:\PROJECT\JAVA\BEGINNER>git config --global user.name "$Jaiho12708$" // set user password
E:\PROJECT\JAVA\BEGINNER>git config --global user.name // display username
E:\PROJECT\JAVA\BEGINNER>git config --global --list // display all setting



On branch DEMO1
nothing to commit, working tree clean


E:\PROJECT\JAVA\BEGINNER>
*/



/*

INSTALLTION OF GITLAB RUNNER (CI/CD)

Microsoft Windows [Version 10.0.19043.1165]
(c) Microsoft Corporation. All rights reserved.

Step1: Do to GitLab RunnerDoc and download Gitlab-Runner-window-64.exe
Step2: Rename the exe file to GitLabRunner.exe 
Step3: Copy the exe file in the folder from where the file will run.
STEP4: Open cmd prompt/ git bash in admintration mode and go tho the folder where exe file is downloaded.

	D:\>cd GitLabRunner

Step5: Install 

	D:\GitLabRunner>gitlab-runner.exe install
	Runtime platform                                    arch=amd64 os=windows pid=13992 revision=58ba2b95 version=14.2.0

Step6: Check version  

	D:\GitLabRunner>gitlab-runner --version
	Version:      14.2.0
	Git revision: 58ba2b95
	Git branch:   14-2-stable
	GO version:   go1.13.8
	Built:        2021-08-22T19:47:56+0000
	OS/Arch:      windows/amd64
	
Step7: Start gitlab-runner
 
	D:\GitLabRunner>gitlab-runner.exe start
	Runtime platform                                    arch=amd64 os=windows pid=6848 revision=58ba2b95 version=14.2.0

Step8: Stop gitlab-runner

	D:\GitLabRunner>gitlab-runner.exe stop
	Runtime platform                                    arch=amd64 os=windows pid=976 revision=58ba2b95 version=14.2.0

Step9: Register gitlab-runner
Step10: Enter GitLab instance URL (https://gitlab.com)
Step11: Enter the registration token 
		a) Go to your gitlab account
		b) Select project.
		c) Setting-> CI/CD -> Runner (expand) --> token ID  
Step12: Enter description for the runner
Step12: Enter tags for the runner (comma-separated) example: SSH , CI (It could be any thing)
Step13: Enter Shell 


	D:\GitLabRunner>gitlab-runner.exe register
	Runtime platform                                    arch=amd64 os=windows pid=9296 revision=58ba2b95 version=14.2.0
	Enter the GitLab instance URL (for example, https://gitlab.com/):
	https://gitlab.com
	Enter the registration token:
	2y7SbSD65Fkqoj6EtHbN
	Enter a description for the runner:
	[LAPTOP-3QC3HN03]: SMSI-Runner
	Enter tags for the runner (comma-separated):
	SSH , CI
	Registering runner... succeeded                     runner=2y7SbSD6
	Enter an executor: docker, docker-ssh, ssh, virtualbox, docker-ssh+machine, kubernetes, custom, docker-windows, parallels, shell, docker+machine:
	shell
	Runner registered successfully. Feel free to start it, but if it's running already the config should be automatically reloaded!

Step13: gitlab-runner.exe start 
Step14: Verfiy  Gitlab Running
		a) Go to your gitlab account
		b) Select project.
		c) Setting-> CI/CD 

D:\GitLabRunner>gitlab-runner.exe start
Runtime platform                                    arch=amd64 os=windows pid=14308 revision=58ba2b95 version=14.2.0

D:\GitLabRunner>



*/




